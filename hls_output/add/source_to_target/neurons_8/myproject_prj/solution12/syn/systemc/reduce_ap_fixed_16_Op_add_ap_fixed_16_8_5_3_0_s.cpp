// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::ap_const_logic_1 = sc_dt::Log_1;
const bool reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::ap_const_boolean_1 = true;
const sc_logic reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::ap_const_logic_0 = sc_dt::Log_0;

reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_add_ln703_10_fu_184_p2);
    sensitive << ( add_ln703_9_fu_178_p2 );
    sensitive << ( add_ln703_8_fu_172_p2 );

    SC_METHOD(thread_add_ln703_11_fu_190_p2);
    sensitive << ( x_4_V_read );
    sensitive << ( x_5_V_read );

    SC_METHOD(thread_add_ln703_12_fu_196_p2);
    sensitive << ( x_6_V_read );
    sensitive << ( x_7_V_read );

    SC_METHOD(thread_add_ln703_13_fu_202_p2);
    sensitive << ( add_ln703_12_fu_196_p2 );
    sensitive << ( add_ln703_11_fu_190_p2 );

    SC_METHOD(thread_add_ln703_14_fu_208_p2);
    sensitive << ( add_ln703_13_fu_202_p2 );
    sensitive << ( add_ln703_10_fu_184_p2 );

    SC_METHOD(thread_add_ln703_1_fu_130_p2);
    sensitive << ( x_14_V_read );
    sensitive << ( x_15_V_read );

    SC_METHOD(thread_add_ln703_2_fu_136_p2);
    sensitive << ( x_12_V_read );
    sensitive << ( x_13_V_read );

    SC_METHOD(thread_add_ln703_3_fu_142_p2);
    sensitive << ( add_ln703_2_fu_136_p2 );
    sensitive << ( add_ln703_1_fu_130_p2 );

    SC_METHOD(thread_add_ln703_4_fu_148_p2);
    sensitive << ( x_8_V_read );
    sensitive << ( x_9_V_read );

    SC_METHOD(thread_add_ln703_5_fu_154_p2);
    sensitive << ( x_10_V_read );
    sensitive << ( x_11_V_read );

    SC_METHOD(thread_add_ln703_6_fu_160_p2);
    sensitive << ( add_ln703_5_fu_154_p2 );
    sensitive << ( add_ln703_4_fu_148_p2 );

    SC_METHOD(thread_add_ln703_7_fu_166_p2);
    sensitive << ( add_ln703_6_fu_160_p2 );
    sensitive << ( add_ln703_3_fu_142_p2 );

    SC_METHOD(thread_add_ln703_8_fu_172_p2);
    sensitive << ( x_0_V_read );
    sensitive << ( x_1_V_read );

    SC_METHOD(thread_add_ln703_9_fu_178_p2);
    sensitive << ( x_2_V_read );
    sensitive << ( x_3_V_read );

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_ap_return);
    sensitive << ( add_ln703_14_fu_208_p2 );
    sensitive << ( add_ln703_7_fu_166_p2 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x_0_V_read, "(port)x_0_V_read");
    sc_trace(mVcdFile, x_1_V_read, "(port)x_1_V_read");
    sc_trace(mVcdFile, x_2_V_read, "(port)x_2_V_read");
    sc_trace(mVcdFile, x_3_V_read, "(port)x_3_V_read");
    sc_trace(mVcdFile, x_4_V_read, "(port)x_4_V_read");
    sc_trace(mVcdFile, x_5_V_read, "(port)x_5_V_read");
    sc_trace(mVcdFile, x_6_V_read, "(port)x_6_V_read");
    sc_trace(mVcdFile, x_7_V_read, "(port)x_7_V_read");
    sc_trace(mVcdFile, x_8_V_read, "(port)x_8_V_read");
    sc_trace(mVcdFile, x_9_V_read, "(port)x_9_V_read");
    sc_trace(mVcdFile, x_10_V_read, "(port)x_10_V_read");
    sc_trace(mVcdFile, x_11_V_read, "(port)x_11_V_read");
    sc_trace(mVcdFile, x_12_V_read, "(port)x_12_V_read");
    sc_trace(mVcdFile, x_13_V_read, "(port)x_13_V_read");
    sc_trace(mVcdFile, x_14_V_read, "(port)x_14_V_read");
    sc_trace(mVcdFile, x_15_V_read, "(port)x_15_V_read");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, add_ln703_2_fu_136_p2, "add_ln703_2_fu_136_p2");
    sc_trace(mVcdFile, add_ln703_1_fu_130_p2, "add_ln703_1_fu_130_p2");
    sc_trace(mVcdFile, add_ln703_5_fu_154_p2, "add_ln703_5_fu_154_p2");
    sc_trace(mVcdFile, add_ln703_4_fu_148_p2, "add_ln703_4_fu_148_p2");
    sc_trace(mVcdFile, add_ln703_6_fu_160_p2, "add_ln703_6_fu_160_p2");
    sc_trace(mVcdFile, add_ln703_3_fu_142_p2, "add_ln703_3_fu_142_p2");
    sc_trace(mVcdFile, add_ln703_9_fu_178_p2, "add_ln703_9_fu_178_p2");
    sc_trace(mVcdFile, add_ln703_8_fu_172_p2, "add_ln703_8_fu_172_p2");
    sc_trace(mVcdFile, add_ln703_12_fu_196_p2, "add_ln703_12_fu_196_p2");
    sc_trace(mVcdFile, add_ln703_11_fu_190_p2, "add_ln703_11_fu_190_p2");
    sc_trace(mVcdFile, add_ln703_13_fu_202_p2, "add_ln703_13_fu_202_p2");
    sc_trace(mVcdFile, add_ln703_10_fu_184_p2, "add_ln703_10_fu_184_p2");
    sc_trace(mVcdFile, add_ln703_14_fu_208_p2, "add_ln703_14_fu_208_p2");
    sc_trace(mVcdFile, add_ln703_7_fu_166_p2, "add_ln703_7_fu_166_p2");
#endif

    }
}

reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::~reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::thread_add_ln703_10_fu_184_p2() {
    add_ln703_10_fu_184_p2 = (!add_ln703_9_fu_178_p2.read().is_01() || !add_ln703_8_fu_172_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(add_ln703_9_fu_178_p2.read()) + sc_biguint<16>(add_ln703_8_fu_172_p2.read()));
}

void reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::thread_add_ln703_11_fu_190_p2() {
    add_ln703_11_fu_190_p2 = (!x_4_V_read.read().is_01() || !x_5_V_read.read().is_01())? sc_lv<16>(): (sc_biguint<16>(x_4_V_read.read()) + sc_biguint<16>(x_5_V_read.read()));
}

void reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::thread_add_ln703_12_fu_196_p2() {
    add_ln703_12_fu_196_p2 = (!x_6_V_read.read().is_01() || !x_7_V_read.read().is_01())? sc_lv<16>(): (sc_biguint<16>(x_6_V_read.read()) + sc_biguint<16>(x_7_V_read.read()));
}

void reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::thread_add_ln703_13_fu_202_p2() {
    add_ln703_13_fu_202_p2 = (!add_ln703_12_fu_196_p2.read().is_01() || !add_ln703_11_fu_190_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(add_ln703_12_fu_196_p2.read()) + sc_biguint<16>(add_ln703_11_fu_190_p2.read()));
}

void reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::thread_add_ln703_14_fu_208_p2() {
    add_ln703_14_fu_208_p2 = (!add_ln703_13_fu_202_p2.read().is_01() || !add_ln703_10_fu_184_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(add_ln703_13_fu_202_p2.read()) + sc_biguint<16>(add_ln703_10_fu_184_p2.read()));
}

void reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::thread_add_ln703_1_fu_130_p2() {
    add_ln703_1_fu_130_p2 = (!x_15_V_read.read().is_01() || !x_14_V_read.read().is_01())? sc_lv<16>(): (sc_biguint<16>(x_15_V_read.read()) + sc_biguint<16>(x_14_V_read.read()));
}

void reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::thread_add_ln703_2_fu_136_p2() {
    add_ln703_2_fu_136_p2 = (!x_12_V_read.read().is_01() || !x_13_V_read.read().is_01())? sc_lv<16>(): (sc_biguint<16>(x_12_V_read.read()) + sc_biguint<16>(x_13_V_read.read()));
}

void reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::thread_add_ln703_3_fu_142_p2() {
    add_ln703_3_fu_142_p2 = (!add_ln703_2_fu_136_p2.read().is_01() || !add_ln703_1_fu_130_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(add_ln703_2_fu_136_p2.read()) + sc_biguint<16>(add_ln703_1_fu_130_p2.read()));
}

void reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::thread_add_ln703_4_fu_148_p2() {
    add_ln703_4_fu_148_p2 = (!x_8_V_read.read().is_01() || !x_9_V_read.read().is_01())? sc_lv<16>(): (sc_biguint<16>(x_8_V_read.read()) + sc_biguint<16>(x_9_V_read.read()));
}

void reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::thread_add_ln703_5_fu_154_p2() {
    add_ln703_5_fu_154_p2 = (!x_10_V_read.read().is_01() || !x_11_V_read.read().is_01())? sc_lv<16>(): (sc_biguint<16>(x_10_V_read.read()) + sc_biguint<16>(x_11_V_read.read()));
}

void reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::thread_add_ln703_6_fu_160_p2() {
    add_ln703_6_fu_160_p2 = (!add_ln703_5_fu_154_p2.read().is_01() || !add_ln703_4_fu_148_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(add_ln703_5_fu_154_p2.read()) + sc_biguint<16>(add_ln703_4_fu_148_p2.read()));
}

void reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::thread_add_ln703_7_fu_166_p2() {
    add_ln703_7_fu_166_p2 = (!add_ln703_6_fu_160_p2.read().is_01() || !add_ln703_3_fu_142_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(add_ln703_6_fu_160_p2.read()) + sc_biguint<16>(add_ln703_3_fu_142_p2.read()));
}

void reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::thread_add_ln703_8_fu_172_p2() {
    add_ln703_8_fu_172_p2 = (!x_0_V_read.read().is_01() || !x_1_V_read.read().is_01())? sc_lv<16>(): (sc_biguint<16>(x_0_V_read.read()) + sc_biguint<16>(x_1_V_read.read()));
}

void reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::thread_add_ln703_9_fu_178_p2() {
    add_ln703_9_fu_178_p2 = (!x_2_V_read.read().is_01() || !x_3_V_read.read().is_01())? sc_lv<16>(): (sc_biguint<16>(x_2_V_read.read()) + sc_biguint<16>(x_3_V_read.read()));
}

void reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::thread_ap_ready() {
    ap_ready = ap_const_logic_1;
}

void reduce_ap_fixed_16_Op_add_ap_fixed_16_8_5_3_0_s::thread_ap_return() {
    ap_return = (!add_ln703_14_fu_208_p2.read().is_01() || !add_ln703_7_fu_166_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(add_ln703_14_fu_208_p2.read()) + sc_biguint<16>(add_ln703_7_fu_166_p2.read()));
}

}

