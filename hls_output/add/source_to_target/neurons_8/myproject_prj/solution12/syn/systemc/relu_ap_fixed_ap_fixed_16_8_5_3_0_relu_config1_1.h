// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_HH_
#define _relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1 : public sc_module {
    // Port declarations 17
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > data_0_V_read;
    sc_in< sc_lv<16> > data_1_V_read;
    sc_in< sc_lv<16> > data_2_V_read;
    sc_in< sc_lv<16> > data_3_V_read;
    sc_in< sc_lv<16> > data_4_V_read;
    sc_in< sc_lv<16> > data_5_V_read;
    sc_in< sc_lv<16> > data_6_V_read;
    sc_in< sc_lv<16> > data_7_V_read;
    sc_out< sc_lv<16> > ap_return_0;
    sc_out< sc_lv<16> > ap_return_1;
    sc_out< sc_lv<16> > ap_return_2;
    sc_out< sc_lv<16> > ap_return_3;
    sc_out< sc_lv<16> > ap_return_4;
    sc_out< sc_lv<16> > ap_return_5;
    sc_out< sc_lv<16> > ap_return_6;
    sc_out< sc_lv<16> > ap_return_7;


    // Module declarations
    relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1(sc_module_name name);
    SC_HAS_PROCESS(relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1);

    ~relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<1> > icmp_ln1494_fu_88_p2;
    sc_signal< sc_lv<15> > trunc_ln81_fu_94_p1;
    sc_signal< sc_lv<15> > select_ln81_fu_98_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_1_fu_110_p2;
    sc_signal< sc_lv<15> > trunc_ln81_29_fu_116_p1;
    sc_signal< sc_lv<15> > select_ln81_29_fu_120_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_2_fu_132_p2;
    sc_signal< sc_lv<15> > trunc_ln81_30_fu_138_p1;
    sc_signal< sc_lv<15> > select_ln81_30_fu_142_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_3_fu_154_p2;
    sc_signal< sc_lv<15> > trunc_ln81_31_fu_160_p1;
    sc_signal< sc_lv<15> > select_ln81_31_fu_164_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_4_fu_176_p2;
    sc_signal< sc_lv<15> > trunc_ln81_32_fu_182_p1;
    sc_signal< sc_lv<15> > select_ln81_32_fu_186_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_5_fu_198_p2;
    sc_signal< sc_lv<15> > trunc_ln81_33_fu_204_p1;
    sc_signal< sc_lv<15> > select_ln81_33_fu_208_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_6_fu_220_p2;
    sc_signal< sc_lv<15> > trunc_ln81_34_fu_226_p1;
    sc_signal< sc_lv<15> > select_ln81_34_fu_230_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_7_fu_242_p2;
    sc_signal< sc_lv<15> > trunc_ln81_35_fu_248_p1;
    sc_signal< sc_lv<15> > select_ln81_35_fu_252_p3;
    sc_signal< sc_lv<16> > zext_ln81_fu_106_p1;
    sc_signal< sc_lv<16> > zext_ln81_22_fu_128_p1;
    sc_signal< sc_lv<16> > zext_ln81_23_fu_150_p1;
    sc_signal< sc_lv<16> > zext_ln81_24_fu_172_p1;
    sc_signal< sc_lv<16> > zext_ln81_25_fu_194_p1;
    sc_signal< sc_lv<16> > zext_ln81_26_fu_216_p1;
    sc_signal< sc_lv<16> > zext_ln81_27_fu_238_p1;
    sc_signal< sc_lv<16> > zext_ln81_28_fu_260_p1;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_icmp_ln1494_1_fu_110_p2();
    void thread_icmp_ln1494_2_fu_132_p2();
    void thread_icmp_ln1494_3_fu_154_p2();
    void thread_icmp_ln1494_4_fu_176_p2();
    void thread_icmp_ln1494_5_fu_198_p2();
    void thread_icmp_ln1494_6_fu_220_p2();
    void thread_icmp_ln1494_7_fu_242_p2();
    void thread_icmp_ln1494_fu_88_p2();
    void thread_select_ln81_29_fu_120_p3();
    void thread_select_ln81_30_fu_142_p3();
    void thread_select_ln81_31_fu_164_p3();
    void thread_select_ln81_32_fu_186_p3();
    void thread_select_ln81_33_fu_208_p3();
    void thread_select_ln81_34_fu_230_p3();
    void thread_select_ln81_35_fu_252_p3();
    void thread_select_ln81_fu_98_p3();
    void thread_trunc_ln81_29_fu_116_p1();
    void thread_trunc_ln81_30_fu_138_p1();
    void thread_trunc_ln81_31_fu_160_p1();
    void thread_trunc_ln81_32_fu_182_p1();
    void thread_trunc_ln81_33_fu_204_p1();
    void thread_trunc_ln81_34_fu_226_p1();
    void thread_trunc_ln81_35_fu_248_p1();
    void thread_trunc_ln81_fu_94_p1();
    void thread_zext_ln81_22_fu_128_p1();
    void thread_zext_ln81_23_fu_150_p1();
    void thread_zext_ln81_24_fu_172_p1();
    void thread_zext_ln81_25_fu_194_p1();
    void thread_zext_ln81_26_fu_216_p1();
    void thread_zext_ln81_27_fu_238_p1();
    void thread_zext_ln81_28_fu_260_p1();
    void thread_zext_ln81_fu_106_p1();
};

}

using namespace ap_rtl;

#endif
