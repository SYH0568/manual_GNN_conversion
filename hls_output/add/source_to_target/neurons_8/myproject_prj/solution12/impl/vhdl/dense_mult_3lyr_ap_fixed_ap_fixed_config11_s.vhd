-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_mult_3lyr_ap_fixed_ap_fixed_config11_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of dense_mult_3lyr_ap_fixed_ap_fixed_config11_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv15_7FC3 : STD_LOGIC_VECTOR (14 downto 0) := "111111111000011";
    constant ap_const_lv23_34 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000110100";
    constant ap_const_lv24_FFFF94 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111110010100";
    constant ap_const_lv24_FFFF3B : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111100111011";
    constant ap_const_lv24_73 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001110011";
    constant ap_const_lv24_FFFF96 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111110010110";
    constant ap_const_lv22_3FFFE6 : STD_LOGIC_VECTOR (21 downto 0) := "1111111111111111100110";
    constant ap_const_lv22_13 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000010011";

    signal data0_0_V_reg_565 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal data0_1_V_reg_570 : STD_LOGIC_VECTOR (15 downto 0);
    signal data0_2_V_reg_575 : STD_LOGIC_VECTOR (15 downto 0);
    signal data0_3_V_reg_580 : STD_LOGIC_VECTOR (15 downto 0);
    signal data0_4_V_reg_585 : STD_LOGIC_VECTOR (15 downto 0);
    signal data0_5_V_reg_590 : STD_LOGIC_VECTOR (15 downto 0);
    signal data0_6_V_reg_595 : STD_LOGIC_VECTOR (15 downto 0);
    signal data0_7_V_reg_600 : STD_LOGIC_VECTOR (15 downto 0);
    signal data1_logits_0_V_reg_605 : STD_LOGIC_VECTOR (15 downto 0);
    signal data1_logits_1_V_reg_610 : STD_LOGIC_VECTOR (15 downto 0);
    signal data1_logits_2_V_reg_615 : STD_LOGIC_VECTOR (15 downto 0);
    signal data1_logits_3_V_reg_620 : STD_LOGIC_VECTOR (15 downto 0);
    signal data1_logits_4_V_reg_625 : STD_LOGIC_VECTOR (15 downto 0);
    signal data1_logits_5_V_reg_630 : STD_LOGIC_VECTOR (15 downto 0);
    signal data1_logits_6_V_reg_635 : STD_LOGIC_VECTOR (15 downto 0);
    signal data1_logits_7_V_reg_640 : STD_LOGIC_VECTOR (15 downto 0);
    signal data1_4_V_reg_645 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_230_reg_651 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_231_reg_656 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_reg_661 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_fu_421_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_reg_666 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_322_fu_427_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_322_reg_671 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call10 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call10 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call10 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call10 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call10 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp17 : BOOLEAN;
    signal grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call28 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call28 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call28 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call28 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call28 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call28 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp36 : BOOLEAN;
    signal call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_ready : STD_LOGIC;
    signal call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_ready : STD_LOGIC;
    signal call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal mul_ln1118_fu_516_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln_fu_330_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1118_162_fu_523_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_163_fu_530_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_164_fu_537_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_165_fu_544_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_166_fu_551_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_167_fu_558_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln708_fu_339_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_s_fu_347_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_227_fu_360_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_228_fu_373_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_433_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln1118_s_fu_446_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1118_fu_440_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_168_fu_453_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln1118_54_fu_457_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_229_fu_463_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_fu_476_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_325_fu_488_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln703_30_fu_494_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_98_fu_473_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_326_fu_498_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_324_fu_483_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_327_fu_504_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_323_fu_479_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_fu_516_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_162_fu_523_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_163_fu_530_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1118_164_fu_537_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_165_fu_544_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1118_166_fu_551_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1118_167_fu_558_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_0_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_1_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_2_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_3_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_4_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_5_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_6_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_7_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_8_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_9_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);

    component dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1 IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1 IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_mul_mul_16s_7ns_23_1_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component myproject_mul_mul_16s_8s_24_1_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_mul_16s_9s_24_1_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_mul_16s_8ns_24_1_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_mul_16s_6s_22_1_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mul_mul_16s_6ns_22_1_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;



begin
    grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130 : component dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => data_0_V_read_int_reg,
        data_1_V_read => data_1_V_read_int_reg,
        data_2_V_read => data_2_V_read_int_reg,
        data_3_V_read => data_3_V_read_int_reg,
        data_4_V_read => data_4_V_read_int_reg,
        data_5_V_read => data_5_V_read_int_reg,
        data_6_V_read => data_6_V_read_int_reg,
        data_7_V_read => data_7_V_read_int_reg,
        data_8_V_read => data_8_V_read_int_reg,
        data_9_V_read => data_9_V_read_int_reg,
        ap_return_0 => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_0,
        ap_return_1 => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_1,
        ap_return_2 => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_2,
        ap_return_3 => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_3,
        ap_return_4 => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_4,
        ap_return_5 => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_5,
        ap_return_6 => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_6,
        ap_return_7 => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_7,
        ap_ce => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_ce);

    grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154 : component dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => data0_0_V_reg_565,
        data_1_V_read => data0_1_V_reg_570,
        data_2_V_read => data0_2_V_reg_575,
        data_3_V_read => data0_3_V_reg_580,
        data_4_V_read => data0_4_V_reg_585,
        data_5_V_read => data0_5_V_reg_590,
        data_6_V_read => data0_6_V_reg_595,
        data_7_V_read => data0_7_V_reg_600,
        ap_return_0 => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_0,
        ap_return_1 => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_1,
        ap_return_2 => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_2,
        ap_return_3 => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_3,
        ap_return_4 => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_4,
        ap_return_5 => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_5,
        ap_return_6 => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_6,
        ap_return_7 => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_7,
        ap_ce => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_ce);

    call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166 : component relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1
    port map (
        ap_ready => call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_ready,
        data_0_V_read => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_0,
        data_1_V_read => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_1,
        data_2_V_read => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_2,
        data_3_V_read => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_3,
        data_4_V_read => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_4,
        data_5_V_read => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_5,
        data_6_V_read => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_6,
        data_7_V_read => grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_return_7,
        ap_return_0 => call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_0,
        ap_return_1 => call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_1,
        ap_return_2 => call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_2,
        ap_return_3 => call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_3,
        ap_return_4 => call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_4,
        ap_return_5 => call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_5,
        ap_return_6 => call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_6,
        ap_return_7 => call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_7);

    call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178 : component relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1
    port map (
        ap_ready => call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_ready,
        data_0_V_read => data1_logits_0_V_reg_605,
        data_1_V_read => data1_logits_1_V_reg_610,
        data_2_V_read => data1_logits_2_V_reg_615,
        data_3_V_read => data1_logits_3_V_reg_620,
        data_4_V_read => data1_logits_4_V_reg_625,
        data_5_V_read => data1_logits_5_V_reg_630,
        data_6_V_read => data1_logits_6_V_reg_635,
        data_7_V_read => data1_logits_7_V_reg_640,
        ap_return_0 => call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_0,
        ap_return_1 => call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_1,
        ap_return_2 => call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_2,
        ap_return_3 => call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_3,
        ap_return_4 => call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_4,
        ap_return_5 => call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_5,
        ap_return_6 => call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_6,
        ap_return_7 => call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_7);

    myproject_mul_mul_16s_7ns_23_1_0_U1921 : component myproject_mul_mul_16s_7ns_23_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 7,
        dout_WIDTH => 23)
    port map (
        din0 => call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_0,
        din1 => mul_ln1118_fu_516_p1,
        dout => mul_ln1118_fu_516_p2);

    myproject_mul_mul_16s_8s_24_1_0_U1922 : component myproject_mul_mul_16s_8s_24_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        din0 => call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_1,
        din1 => mul_ln1118_162_fu_523_p1,
        dout => mul_ln1118_162_fu_523_p2);

    myproject_mul_mul_16s_9s_24_1_0_U1923 : component myproject_mul_mul_16s_9s_24_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 24)
    port map (
        din0 => call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_2,
        din1 => mul_ln1118_163_fu_530_p1,
        dout => mul_ln1118_163_fu_530_p2);

    myproject_mul_mul_16s_8ns_24_1_0_U1924 : component myproject_mul_mul_16s_8ns_24_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        din0 => call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_3,
        din1 => mul_ln1118_164_fu_537_p1,
        dout => mul_ln1118_164_fu_537_p2);

    myproject_mul_mul_16s_8s_24_1_0_U1925 : component myproject_mul_mul_16s_8s_24_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        din0 => call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_5,
        din1 => mul_ln1118_165_fu_544_p1,
        dout => mul_ln1118_165_fu_544_p2);

    myproject_mul_mul_16s_6s_22_1_0_U1926 : component myproject_mul_mul_16s_6s_22_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 6,
        dout_WIDTH => 22)
    port map (
        din0 => call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_6,
        din1 => mul_ln1118_166_fu_551_p1,
        dout => mul_ln1118_166_fu_551_p2);

    myproject_mul_mul_16s_6ns_22_1_0_U1927 : component myproject_mul_mul_16s_6ns_22_1_0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 6,
        dout_WIDTH => 22)
    port map (
        din0 => call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_7,
        din1 => mul_ln1118_167_fu_558_p1,
        dout => mul_ln1118_167_fu_558_p2);





    data_0_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_0_V_read_int_reg <= data_0_V_read;
        end if;
    end process;

    data_1_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_1_V_read_int_reg <= data_1_V_read;
        end if;
    end process;

    data_2_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_2_V_read_int_reg <= data_2_V_read;
        end if;
    end process;

    data_3_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_3_V_read_int_reg <= data_3_V_read;
        end if;
    end process;

    data_4_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_4_V_read_int_reg <= data_4_V_read;
        end if;
    end process;

    data_5_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_5_V_read_int_reg <= data_5_V_read;
        end if;
    end process;

    data_6_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_6_V_read_int_reg <= data_6_V_read;
        end if;
    end process;

    data_7_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_7_V_read_int_reg <= data_7_V_read;
        end if;
    end process;

    data_8_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_8_V_read_int_reg <= data_8_V_read;
        end if;
    end process;

    data_9_V_read_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            data_9_V_read_int_reg <= data_9_V_read;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln703_322_reg_671 <= add_ln703_322_fu_427_p2;
                add_ln703_reg_666 <= add_ln703_fu_421_p2;
                data0_0_V_reg_565 <= call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_0;
                data0_1_V_reg_570 <= call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_1;
                data0_2_V_reg_575 <= call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_2;
                data0_3_V_reg_580 <= call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_3;
                data0_4_V_reg_585 <= call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_4;
                data0_5_V_reg_590 <= call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_5;
                data0_6_V_reg_595 <= call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_6;
                data0_7_V_reg_600 <= call_ret48_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config1_1_fu_166_ap_return_7;
                data1_4_V_reg_645 <= call_ret_relu_ap_fixed_ap_fixed_16_8_5_3_0_relu_config2_1_fu_178_ap_return_4;
                data1_logits_0_V_reg_605 <= grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_0;
                data1_logits_1_V_reg_610 <= grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_1;
                data1_logits_2_V_reg_615 <= grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_2;
                data1_logits_3_V_reg_620 <= grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_3;
                data1_logits_4_V_reg_625 <= grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_4;
                data1_logits_5_V_reg_630 <= grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_5;
                data1_logits_6_V_reg_635 <= grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_6;
                data1_logits_7_V_reg_640 <= grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_return_7;
                tmp_reg_661 <= mul_ln1118_167_fu_558_p2(21 downto 8);
                trunc_ln708_230_reg_651 <= mul_ln1118_165_fu_544_p2(23 downto 8);
                trunc_ln708_231_reg_656 <= mul_ln1118_166_fu_551_p2(21 downto 8);
            end if;
        end if;
    end process;
    add_ln703_322_fu_427_p2 <= std_logic_vector(unsigned(trunc_ln708_227_fu_360_p4) + unsigned(trunc_ln708_228_fu_373_p4));
    add_ln703_323_fu_479_p2 <= std_logic_vector(unsigned(add_ln703_322_reg_671) + unsigned(add_ln703_reg_666));
    add_ln703_324_fu_483_p2 <= std_logic_vector(unsigned(trunc_ln708_229_fu_463_p4) + unsigned(trunc_ln708_230_reg_651));
    add_ln703_325_fu_488_p2 <= std_logic_vector(signed(sext_ln703_fu_476_p1) + signed(ap_const_lv15_7FC3));
    add_ln703_326_fu_498_p2 <= std_logic_vector(signed(sext_ln703_30_fu_494_p1) + signed(sext_ln708_98_fu_473_p1));
    add_ln703_327_fu_504_p2 <= std_logic_vector(unsigned(add_ln703_326_fu_498_p2) + unsigned(add_ln703_324_fu_483_p2));
    add_ln703_fu_421_p2 <= std_logic_vector(signed(sext_ln708_fu_339_p1) + signed(trunc_ln708_s_fu_347_p4));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return <= std_logic_vector(unsigned(add_ln703_327_fu_504_p2) + unsigned(add_ln703_323_fu_479_p2));

    grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001_ignoreCallOp36)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp36)) then 
            grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_2_fu_154_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001_ignoreCallOp17)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp17)) then 
            grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_3_fu_130_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln1118_162_fu_523_p1 <= ap_const_lv24_FFFF94(8 - 1 downto 0);
    mul_ln1118_163_fu_530_p1 <= ap_const_lv24_FFFF3B(9 - 1 downto 0);
    mul_ln1118_164_fu_537_p1 <= ap_const_lv24_73(8 - 1 downto 0);
    mul_ln1118_165_fu_544_p1 <= ap_const_lv24_FFFF96(8 - 1 downto 0);
    mul_ln1118_166_fu_551_p1 <= ap_const_lv22_3FFFE6(6 - 1 downto 0);
    mul_ln1118_167_fu_558_p1 <= ap_const_lv22_13(6 - 1 downto 0);
    mul_ln1118_fu_516_p1 <= ap_const_lv23_34(7 - 1 downto 0);
        sext_ln1118_168_fu_453_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_446_p3),24));

        sext_ln703_30_fu_494_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_325_fu_488_p2),16));

        sext_ln703_fu_476_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_reg_661),15));

        sext_ln708_98_fu_473_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_231_reg_656),16));

        sext_ln708_fu_339_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_330_p4),16));

    shl_ln1118_s_fu_446_p3 <= (data1_4_V_reg_645 & ap_const_lv1_0);
    shl_ln_fu_433_p3 <= (data1_4_V_reg_645 & ap_const_lv8_0);
    sub_ln1118_54_fu_457_p2 <= std_logic_vector(unsigned(sub_ln1118_fu_440_p2) - unsigned(sext_ln1118_168_fu_453_p1));
    sub_ln1118_fu_440_p2 <= std_logic_vector(unsigned(ap_const_lv24_0) - unsigned(shl_ln_fu_433_p3));
    trunc_ln708_227_fu_360_p4 <= mul_ln1118_163_fu_530_p2(23 downto 8);
    trunc_ln708_228_fu_373_p4 <= mul_ln1118_164_fu_537_p2(23 downto 8);
    trunc_ln708_229_fu_463_p4 <= sub_ln1118_54_fu_457_p2(23 downto 8);
    trunc_ln708_s_fu_347_p4 <= mul_ln1118_162_fu_523_p2(23 downto 8);
    trunc_ln_fu_330_p4 <= mul_ln1118_fu_516_p2(22 downto 8);
end behav;
